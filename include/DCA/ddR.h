#pragma once

#include <Eigen/Core>

namespace DCA {

/**
 * @name ddR
 * @brief Second derivatives of \f$ R(\theta) \f$
 * 
 * \f$ \theta \f$ represents the exponential map parameter vector of the rotation.
 * 
 * \f$ \frac{dR}{d\theta_i} \f$ is the derivative of the rotation matrix with respect to the i-th exponential map parameter
 * \f$ \frac{d^2R}{d\theta_i d\theta_j} \f$ is the derivative of \f$ \frac{dR}{d\theta_i} \f$ with respect to the j-th exponential map parameter
 */

/** @{ */ // start of group

/**
 * @brief Compute \f$ \frac{d^2R}{d\theta_0 d\theta_0} \f$
 * 
 * @param[in] v \f$ \theta \f$
 * @return The partial second derivative.
 */
inline Eigen::Matrix3d ddR_0_0(const Eigen::Vector3d& v) {
    Eigen::Matrix3d ddR_0_0;
    double v0 = v[0];
    double v1 = v[1];
    double v2 = v[2];
    double v3 = 0.500000;
    double v4 = v0 * v0;
    double v5 = v1 * v1;
    double v6 = v2 * v2;
    double v7 = v5 + v6;
    double v8 = v4 + v7;
    double v9 = sqrt(v8);
    double v10 = v3 / v9;
    double v11 = v0 + v0;
    double v12 = v10 * v11;
    double v13 = v9 * v9;
    double v14 = v2 / v13;
    double v15 = v12 * v14;
    double v16 = -v15;
    double v17 = sin(v9);
    double v18 = v16 * v17;
    double v19 = cos(v9);
    double v20 = v19 * v12;
    double v21 = v2 / v9;
    double v22 = v20 * v21;
    double v23 = v18 + v22;
    double v24 = v1 / v13;
    double v25 = v12 * v24;
    double v26 = -v25;
    double v27 = -v26;
    double v28 = v0 / v9;
    double v29 = -v28;
    double v30 = v27 * v29;
    double v31 = v9 / v13;
    double v32 = v0 / v13;
    double v33 = v12 * v32;
    double v34 = v31 - v33;
    double v35 = -v34;
    double v36 = v1 / v9;
    double v37 = -v36;
    double v38 = v35 * v37;
    double v39 = v30 + v38;
    double v40 = 2.000000;
    double v41 = v3 * v9;
    double v42 = sin(v41);
    double v43 = v40 * v42;
    double v44 = v43 * v42;
    double v45 = v39 * v44;
    double v46 = cos(v41);
    double v47 = v3 * v12;
    double v48 = v46 * v47;
    double v49 = v48 * v43;
    double v50 = v48 * v40;
    double v51 = v50 * v42;
    double v52 = v49 + v51;
    double v53 = v29 * v37;
    double v54 = v52 * v53;
    double v55 = v45 + v54;
    double v56 = v23 + v55;
    double v57 = v0 * v2;
    double v58 = -v1;
    double v59 = 1.000000;
    double v60 = -v21;
    double v61 = v60 * v21;
    double v62 = v36 * v37;
    double v63 = v61 + v62;
    double v64 = v44 * v63;
    double v65 = v59 + v64;
    double v66 = v59 - v65;
    double v67 = v58 * v66;
    double v68 = v17 * v21;
    double v69 = v44 * v53;
    double v70 = v68 + v69;
    double v71 = -v70;
    double v72 = v0 * v71;
    double v73 = v67 + v72;
    double v74 = v57 + v73;
    double v75 = -v74;
    double v76 = v75 / v13;
    double v77 = v56 * v76;
    double v78 = v16 * v60;
    double v79 = -v16;
    double v80 = v79 * v21;
    double v81 = v78 + v80;
    double v82 = v27 * v36;
    double v83 = v26 * v37;
    double v84 = v82 + v83;
    double v85 = v81 + v84;
    double v86 = v85 * v44;
    double v87 = v52 * v63;
    double v88 = v86 + v87;
    double v89 = -v88;
    double v90 = v89 * v58;
    double v91 = -v56;
    double v92 = v91 * v0;
    double v93 = v92 + v71;
    double v94 = v90 + v93;
    double v95 = v2 + v94;
    double v96 = -v95;
    double v97 = v13 * v13;
    double v98 = v13 / v97;
    double v99 = v96 * v98;
    double v100 = v12 * v9;
    double v101 = v100 + v100;
    double v102 = v75 / v97;
    double v103 = v101 * v102;
    double v104 = v99 - v103;
    double v105 = v104 * v70;
    double v106 = v77 + v105;
    double v107 = v27 * v17;
    double v108 = v20 * v37;
    double v109 = v107 + v108;
    double v110 = v16 * v28;
    double v111 = v34 * v21;
    double v112 = v110 + v111;
    double v113 = v112 * v44;
    double v114 = v28 * v21;
    double v115 = v52 * v114;
    double v116 = v113 + v115;
    double v117 = v109 + v116;
    double v118 = v0 * v1;
    double v119 = v2 * v66;
    double v120 = -v0;
    double v121 = v17 * v37;
    double v122 = v44 * v114;
    double v123 = v121 + v122;
    double v124 = -v123;
    double v125 = v120 * v124;
    double v126 = v119 + v125;
    double v127 = v118 + v126;
    double v128 = v127 / v13;
    double v129 = v117 * v128;
    double v130 = v89 * v2;
    double v131 = -v117;
    double v132 = v131 * v120;
    double v133 = -v124;
    double v134 = v132 + v133;
    double v135 = v130 + v134;
    double v136 = v1 + v135;
    double v137 = v136 * v98;
    double v138 = v127 / v97;
    double v139 = v101 * v138;
    double v140 = v137 - v139;
    double v141 = v140 * v123;
    double v142 = v129 + v141;
    double v143 = v106 + v142;
    double v144 = v34 * v29;
    double v145 = v35 * v28;
    double v146 = v144 + v145;
    double v147 = v81 + v146;
    double v148 = v147 * v44;
    double v149 = v29 * v28;
    double v150 = v61 + v149;
    double v151 = v52 * v150;
    double v152 = v148 + v151;
    double v153 = v152 * v76;
    double v154 = v44 * v150;
    double v155 = v59 + v154;
    double v156 = v104 * v155;
    double v157 = v153 + v156;
    double v158 = v34 * v17;
    double v159 = v20 * v28;
    double v160 = v158 + v159;
    double v161 = v79 * v37;
    double v162 = v27 * v60;
    double v163 = v161 + v162;
    double v164 = v163 * v44;
    double v165 = v37 * v60;
    double v166 = v52 * v165;
    double v167 = v164 + v166;
    double v168 = v160 + v167;
    double v169 = v168 * v128;
    double v170 = v17 * v28;
    double v171 = v44 * v165;
    double v172 = v170 + v171;
    double v173 = v140 * v172;
    double v174 = v169 + v173;
    double v175 = v157 + v174;
    double v176 = v35 * v17;
    double v177 = v20 * v29;
    double v178 = v176 + v177;
    double v179 = v26 * v21;
    double v180 = v16 * v36;
    double v181 = v179 + v180;
    double v182 = v181 * v44;
    double v183 = v21 * v36;
    double v184 = v52 * v183;
    double v185 = v182 + v184;
    double v186 = v178 + v185;
    double v187 = v186 * v76;
    double v188 = v17 * v29;
    double v189 = v44 * v183;
    double v190 = v188 + v189;
    double v191 = v104 * v190;
    double v192 = v187 + v191;
    double v193 = v84 + v146;
    double v194 = v193 * v44;
    double v195 = v62 + v149;
    double v196 = v52 * v195;
    double v197 = v194 + v196;
    double v198 = v197 * v128;
    double v199 = v44 * v195;
    double v200 = v59 + v199;
    double v201 = v140 * v200;
    double v202 = v198 + v201;
    double v203 = v192 + v202;
    double v204 = v74 / v13;
    double v205 = v88 * v204;
    double v206 = v95 * v98;
    double v207 = v74 / v97;
    double v208 = v101 * v207;
    double v209 = v206 - v208;
    double v210 = v209 * v65;
    double v211 = v205 + v210;
    double v212 = -v2;
    double v213 = v212 * v71;
    double v214 = v1 * v124;
    double v215 = v213 + v214;
    double v216 = v4 + v215;
    double v217 = -v216;
    double v218 = v217 / v13;
    double v219 = v117 * v218;
    double v220 = v91 * v212;
    double v221 = v131 * v1;
    double v222 = v220 + v221;
    double v223 = v11 + v222;
    double v224 = -v223;
    double v225 = v224 * v98;
    double v226 = v217 / v97;
    double v227 = v101 * v226;
    double v228 = v225 - v227;
    double v229 = v228 * v123;
    double v230 = v219 + v229;
    double v231 = v211 + v230;
    double v232 = v79 * v17;
    double v233 = v20 * v60;
    double v234 = v232 + v233;
    double v235 = v34 * v36;
    double v236 = v26 * v28;
    double v237 = v235 + v236;
    double v238 = v237 * v44;
    double v239 = v36 * v28;
    double v240 = v52 * v239;
    double v241 = v238 + v240;
    double v242 = v234 + v241;
    double v243 = v242 * v204;
    double v244 = v17 * v60;
    double v245 = v44 * v239;
    double v246 = v244 + v245;
    double v247 = v209 * v246;
    double v248 = v243 + v247;
    double v249 = v168 * v218;
    double v250 = v228 * v172;
    double v251 = v249 + v250;
    double v252 = v248 + v251;
    double v253 = v26 * v17;
    double v254 = v20 * v36;
    double v255 = v253 + v254;
    double v256 = v35 * v60;
    double v257 = v79 * v29;
    double v258 = v256 + v257;
    double v259 = v258 * v44;
    double v260 = v60 * v29;
    double v261 = v52 * v260;
    double v262 = v259 + v261;
    double v263 = v255 + v262;
    double v264 = v263 * v204;
    double v265 = v17 * v36;
    double v266 = v44 * v260;
    double v267 = v265 + v266;
    double v268 = v209 * v267;
    double v269 = v264 + v268;
    double v270 = v197 * v218;
    double v271 = v228 * v200;
    double v272 = v270 + v271;
    double v273 = v269 + v272;
    double v274 = -v127;
    double v275 = v274 / v13;
    double v276 = v88 * v275;
    double v277 = -v136;
    double v278 = v277 * v98;
    double v279 = v274 / v97;
    double v280 = v101 * v279;
    double v281 = v278 - v280;
    double v282 = v281 * v65;
    double v283 = v276 + v282;
    double v284 = v216 / v13;
    double v285 = v56 * v284;
    double v286 = v223 * v98;
    double v287 = v216 / v97;
    double v288 = v101 * v287;
    double v289 = v286 - v288;
    double v290 = v289 * v70;
    double v291 = v285 + v290;
    double v292 = v283 + v291;
    double v293 = v242 * v275;
    double v294 = v281 * v246;
    double v295 = v293 + v294;
    double v296 = v152 * v284;
    double v297 = v289 * v155;
    double v298 = v296 + v297;
    double v299 = v295 + v298;
    double v300 = v263 * v275;
    double v301 = v281 * v267;
    double v302 = v300 + v301;
    double v303 = v186 * v284;
    double v304 = v289 * v190;
    double v305 = v303 + v304;
    double v306 = v302 + v305;
    ddR_0_0(0, 0) = v143;
    ddR_0_0(0, 1) = v175;
    ddR_0_0(0, 2) = v203;
    ddR_0_0(1, 0) = v231;
    ddR_0_0(1, 1) = v252;
    ddR_0_0(1, 2) = v273;
    ddR_0_0(2, 0) = v292;
    ddR_0_0(2, 1) = v299;
    ddR_0_0(2, 2) = v306;

    return ddR_0_0;
}

/**
 * @brief Compute \f$ \frac{d^2R}{d\theta_0 d\theta_1} \f$
 * 
 * @param[in] v \f$ \theta \f$
 * @return The partial second derivative.
 */
inline Eigen::Matrix3d ddR_0_1(const Eigen::Vector3d& v) {
    Eigen::Matrix3d ddR_0_1;
    double v0 = v[0];
    double v1 = v[1];
    double v2 = v[2];
    double v3 = 0.500000;
    double v4 = v0 * v0;
    double v5 = v1 * v1;
    double v6 = v2 * v2;
    double v7 = v5 + v6;
    double v8 = v4 + v7;
    double v9 = sqrt(v8);
    double v10 = v3 / v9;
    double v11 = v0 + v0;
    double v12 = v10 * v11;
    double v13 = v9 * v9;
    double v14 = v2 / v13;
    double v15 = v12 * v14;
    double v16 = -v15;
    double v17 = sin(v9);
    double v18 = v16 * v17;
    double v19 = cos(v9);
    double v20 = v19 * v12;
    double v21 = v2 / v9;
    double v22 = v20 * v21;
    double v23 = v18 + v22;
    double v24 = v1 / v13;
    double v25 = v12 * v24;
    double v26 = -v25;
    double v27 = -v26;
    double v28 = v0 / v9;
    double v29 = -v28;
    double v30 = v27 * v29;
    double v31 = v9 / v13;
    double v32 = v0 / v13;
    double v33 = v12 * v32;
    double v34 = v31 - v33;
    double v35 = -v34;
    double v36 = v1 / v9;
    double v37 = -v36;
    double v38 = v35 * v37;
    double v39 = v30 + v38;
    double v40 = 2.000000;
    double v41 = v3 * v9;
    double v42 = sin(v41);
    double v43 = v40 * v42;
    double v44 = v43 * v42;
    double v45 = v39 * v44;
    double v46 = cos(v41);
    double v47 = v3 * v12;
    double v48 = v46 * v47;
    double v49 = v48 * v43;
    double v50 = v48 * v40;
    double v51 = v50 * v42;
    double v52 = v49 + v51;
    double v53 = v29 * v37;
    double v54 = v52 * v53;
    double v55 = v45 + v54;
    double v56 = v23 + v55;
    double v57 = v1 * v2;
    double v58 = -v1;
    double v59 = -v21;
    double v60 = v17 * v59;
    double v61 = v36 * v28;
    double v62 = v44 * v61;
    double v63 = v60 + v62;
    double v64 = -v63;
    double v65 = v58 * v64;
    double v66 = 1.000000;
    double v67 = v21 * v59;
    double v68 = v29 * v28;
    double v69 = v67 + v68;
    double v70 = v44 * v69;
    double v71 = v66 + v70;
    double v72 = v66 - v71;
    double v73 = v0 * v72;
    double v74 = v65 + v73;
    double v75 = v57 + v74;
    double v76 = -v75;
    double v77 = v76 / v13;
    double v78 = v56 * v77;
    double v79 = -v16;
    double v80 = v79 * v17;
    double v81 = v20 * v59;
    double v82 = v80 + v81;
    double v83 = v34 * v36;
    double v84 = v26 * v28;
    double v85 = v83 + v84;
    double v86 = v85 * v44;
    double v87 = v52 * v61;
    double v88 = v86 + v87;
    double v89 = v82 + v88;
    double v90 = -v89;
    double v91 = v90 * v58;
    double v92 = v79 * v21;
    double v93 = v16 * v59;
    double v94 = v92 + v93;
    double v95 = v34 * v29;
    double v96 = v35 * v28;
    double v97 = v95 + v96;
    double v98 = v94 + v97;
    double v99 = v98 * v44;
    double v100 = v52 * v69;
    double v101 = v99 + v100;
    double v102 = -v101;
    double v103 = v102 * v0;
    double v104 = v103 + v72;
    double v105 = v91 + v104;
    double v106 = -v105;
    double v107 = v13 * v13;
    double v108 = v13 / v107;
    double v109 = v106 * v108;
    double v110 = v12 * v9;
    double v111 = v110 + v110;
    double v112 = v76 / v107;
    double v113 = v111 * v112;
    double v114 = v109 - v113;
    double v115 = v17 * v21;
    double v116 = v44 * v53;
    double v117 = v115 + v116;
    double v118 = v114 * v117;
    double v119 = v78 + v118;
    double v120 = v27 * v17;
    double v121 = v20 * v37;
    double v122 = v120 + v121;
    double v123 = v16 * v28;
    double v124 = v34 * v21;
    double v125 = v123 + v124;
    double v126 = v125 * v44;
    double v127 = v28 * v21;
    double v128 = v52 * v127;
    double v129 = v126 + v128;
    double v130 = v122 + v129;
    double v131 = v2 * v64;
    double v132 = -v0;
    double v133 = v17 * v28;
    double v134 = v37 * v59;
    double v135 = v44 * v134;
    double v136 = v133 + v135;
    double v137 = -v136;
    double v138 = v132 * v137;
    double v139 = v131 + v138;
    double v140 = v5 + v139;
    double v141 = v140 / v13;
    double v142 = v130 * v141;
    double v143 = v90 * v2;
    double v144 = v34 * v17;
    double v145 = v20 * v28;
    double v146 = v144 + v145;
    double v147 = v79 * v37;
    double v148 = v27 * v59;
    double v149 = v147 + v148;
    double v150 = v149 * v44;
    double v151 = v52 * v134;
    double v152 = v150 + v151;
    double v153 = v146 + v152;
    double v154 = -v153;
    double v155 = v154 * v132;
    double v156 = -v137;
    double v157 = v155 + v156;
    double v158 = v143 + v157;
    double v159 = v158 * v108;
    double v160 = v140 / v107;
    double v161 = v111 * v160;
    double v162 = v159 - v161;
    double v163 = v17 * v37;
    double v164 = v44 * v127;
    double v165 = v163 + v164;
    double v166 = v162 * v165;
    double v167 = v142 + v166;
    double v168 = v119 + v167;
    double v169 = v101 * v77;
    double v170 = v114 * v71;
    double v171 = v169 + v170;
    double v172 = v153 * v141;
    double v173 = v162 * v136;
    double v174 = v172 + v173;
    double v175 = v171 + v174;
    double v176 = v35 * v17;
    double v177 = v20 * v29;
    double v178 = v176 + v177;
    double v179 = v26 * v21;
    double v180 = v16 * v36;
    double v181 = v179 + v180;
    double v182 = v181 * v44;
    double v183 = v21 * v36;
    double v184 = v52 * v183;
    double v185 = v182 + v184;
    double v186 = v178 + v185;
    double v187 = v186 * v77;
    double v188 = v17 * v29;
    double v189 = v44 * v183;
    double v190 = v188 + v189;
    double v191 = v114 * v190;
    double v192 = v187 + v191;
    double v193 = v26 * v37;
    double v194 = v27 * v36;
    double v195 = v193 + v194;
    double v196 = v195 + v97;
    double v197 = v196 * v44;
    double v198 = v37 * v36;
    double v199 = v198 + v68;
    double v200 = v52 * v199;
    double v201 = v197 + v200;
    double v202 = v201 * v141;
    double v203 = v44 * v199;
    double v204 = v66 + v203;
    double v205 = v162 * v204;
    double v206 = v202 + v205;
    double v207 = v192 + v206;
    double v208 = v94 + v195;
    double v209 = v208 * v44;
    double v210 = v67 + v198;
    double v211 = v52 * v210;
    double v212 = v209 + v211;
    double v213 = v75 / v13;
    double v214 = v212 * v213;
    double v215 = v105 * v108;
    double v216 = v75 / v107;
    double v217 = v111 * v216;
    double v218 = v215 - v217;
    double v219 = v44 * v210;
    double v220 = v66 + v219;
    double v221 = v218 * v220;
    double v222 = v214 + v221;
    double v223 = v1 * v0;
    double v224 = -v2;
    double v225 = v224 * v72;
    double v226 = v1 * v137;
    double v227 = v225 + v226;
    double v228 = v223 + v227;
    double v229 = -v228;
    double v230 = v229 / v13;
    double v231 = v130 * v230;
    double v232 = v102 * v224;
    double v233 = v154 * v1;
    double v234 = v232 + v233;
    double v235 = v1 + v234;
    double v236 = -v235;
    double v237 = v236 * v108;
    double v238 = v229 / v107;
    double v239 = v111 * v238;
    double v240 = v237 - v239;
    double v241 = v240 * v165;
    double v242 = v231 + v241;
    double v243 = v222 + v242;
    double v244 = v89 * v213;
    double v245 = v218 * v63;
    double v246 = v244 + v245;
    double v247 = v153 * v230;
    double v248 = v240 * v136;
    double v249 = v247 + v248;
    double v250 = v246 + v249;
    double v251 = v26 * v17;
    double v252 = v20 * v36;
    double v253 = v251 + v252;
    double v254 = v35 * v59;
    double v255 = v79 * v29;
    double v256 = v254 + v255;
    double v257 = v256 * v44;
    double v258 = v59 * v29;
    double v259 = v52 * v258;
    double v260 = v257 + v259;
    double v261 = v253 + v260;
    double v262 = v261 * v213;
    double v263 = v17 * v36;
    double v264 = v44 * v258;
    double v265 = v263 + v264;
    double v266 = v218 * v265;
    double v267 = v262 + v266;
    double v268 = v201 * v230;
    double v269 = v240 * v204;
    double v270 = v268 + v269;
    double v271 = v267 + v270;
    double v272 = -v140;
    double v273 = v272 / v13;
    double v274 = v212 * v273;
    double v275 = -v158;
    double v276 = v275 * v108;
    double v277 = v272 / v107;
    double v278 = v111 * v277;
    double v279 = v276 - v278;
    double v280 = v279 * v220;
    double v281 = v274 + v280;
    double v282 = v228 / v13;
    double v283 = v56 * v282;
    double v284 = v235 * v108;
    double v285 = v228 / v107;
    double v286 = v111 * v285;
    double v287 = v284 - v286;
    double v288 = v287 * v117;
    double v289 = v283 + v288;
    double v290 = v281 + v289;
    double v291 = v89 * v273;
    double v292 = v279 * v63;
    double v293 = v291 + v292;
    double v294 = v101 * v282;
    double v295 = v287 * v71;
    double v296 = v294 + v295;
    double v297 = v293 + v296;
    double v298 = v261 * v273;
    double v299 = v279 * v265;
    double v300 = v298 + v299;
    double v301 = v186 * v282;
    double v302 = v287 * v190;
    double v303 = v301 + v302;
    double v304 = v300 + v303;
    ddR_0_1(0, 0) = v168;
    ddR_0_1(0, 1) = v175;
    ddR_0_1(0, 2) = v207;
    ddR_0_1(1, 0) = v243;
    ddR_0_1(1, 1) = v250;
    ddR_0_1(1, 2) = v271;
    ddR_0_1(2, 0) = v290;
    ddR_0_1(2, 1) = v297;
    ddR_0_1(2, 2) = v304;

    return ddR_0_1;
}

/**
 * @brief Compute \f$ \frac{d^2R}{d\theta_0 d\theta_2} \f$
 * 
 * @param[in] v \f$ \theta \f$
 * @return The partial second derivative.
 */
inline Eigen::Matrix3d ddR_0_2(const Eigen::Vector3d& v) {
    Eigen::Matrix3d ddR_0_2;
    double v0 = v[0];
    double v1 = v[1];
    double v2 = v[2];
    double v3 = 0.500000;
    double v4 = v0 * v0;
    double v5 = v1 * v1;
    double v6 = v2 * v2;
    double v7 = v5 + v6;
    double v8 = v4 + v7;
    double v9 = sqrt(v8);
    double v10 = v3 / v9;
    double v11 = v0 + v0;
    double v12 = v10 * v11;
    double v13 = v9 * v9;
    double v14 = v2 / v13;
    double v15 = v12 * v14;
    double v16 = -v15;
    double v17 = sin(v9);
    double v18 = v16 * v17;
    double v19 = cos(v9);
    double v20 = v19 * v12;
    double v21 = v2 / v9;
    double v22 = v20 * v21;
    double v23 = v18 + v22;
    double v24 = v1 / v13;
    double v25 = v12 * v24;
    double v26 = -v25;
    double v27 = -v26;
    double v28 = v0 / v9;
    double v29 = -v28;
    double v30 = v27 * v29;
    double v31 = v9 / v13;
    double v32 = v0 / v13;
    double v33 = v12 * v32;
    double v34 = v31 - v33;
    double v35 = -v34;
    double v36 = v1 / v9;
    double v37 = -v36;
    double v38 = v35 * v37;
    double v39 = v30 + v38;
    double v40 = 2.000000;
    double v41 = v3 * v9;
    double v42 = sin(v41);
    double v43 = v40 * v42;
    double v44 = v43 * v42;
    double v45 = v39 * v44;
    double v46 = cos(v41);
    double v47 = v3 * v12;
    double v48 = v46 * v47;
    double v49 = v48 * v43;
    double v50 = v48 * v40;
    double v51 = v50 * v42;
    double v52 = v49 + v51;
    double v53 = v29 * v37;
    double v54 = v52 * v53;
    double v55 = v45 + v54;
    double v56 = v23 + v55;
    double v57 = -v1;
    double v58 = v17 * v36;
    double v59 = -v21;
    double v60 = v59 * v29;
    double v61 = v44 * v60;
    double v62 = v58 + v61;
    double v63 = -v62;
    double v64 = v57 * v63;
    double v65 = v17 * v29;
    double v66 = v21 * v36;
    double v67 = v44 * v66;
    double v68 = v65 + v67;
    double v69 = -v68;
    double v70 = v0 * v69;
    double v71 = v64 + v70;
    double v72 = v6 + v71;
    double v73 = -v72;
    double v74 = v73 / v13;
    double v75 = v56 * v74;
    double v76 = v26 * v17;
    double v77 = v20 * v36;
    double v78 = v76 + v77;
    double v79 = v35 * v59;
    double v80 = -v16;
    double v81 = v80 * v29;
    double v82 = v79 + v81;
    double v83 = v82 * v44;
    double v84 = v52 * v60;
    double v85 = v83 + v84;
    double v86 = v78 + v85;
    double v87 = -v86;
    double v88 = v87 * v57;
    double v89 = v35 * v17;
    double v90 = v20 * v29;
    double v91 = v89 + v90;
    double v92 = v26 * v21;
    double v93 = v16 * v36;
    double v94 = v92 + v93;
    double v95 = v94 * v44;
    double v96 = v52 * v66;
    double v97 = v95 + v96;
    double v98 = v91 + v97;
    double v99 = -v98;
    double v100 = v99 * v0;
    double v101 = v100 + v69;
    double v102 = v88 + v101;
    double v103 = -v102;
    double v104 = v13 * v13;
    double v105 = v13 / v104;
    double v106 = v103 * v105;
    double v107 = v12 * v9;
    double v108 = v107 + v107;
    double v109 = v73 / v104;
    double v110 = v108 * v109;
    double v111 = v106 - v110;
    double v112 = v17 * v21;
    double v113 = v44 * v53;
    double v114 = v112 + v113;
    double v115 = v111 * v114;
    double v116 = v75 + v115;
    double v117 = v27 * v17;
    double v118 = v20 * v37;
    double v119 = v117 + v118;
    double v120 = v16 * v28;
    double v121 = v34 * v21;
    double v122 = v120 + v121;
    double v123 = v122 * v44;
    double v124 = v28 * v21;
    double v125 = v52 * v124;
    double v126 = v123 + v125;
    double v127 = v119 + v126;
    double v128 = v2 * v1;
    double v129 = v2 * v63;
    double v130 = -v0;
    double v131 = 1.000000;
    double v132 = v37 * v36;
    double v133 = v28 * v29;
    double v134 = v132 + v133;
    double v135 = v44 * v134;
    double v136 = v131 + v135;
    double v137 = v131 - v136;
    double v138 = v130 * v137;
    double v139 = v129 + v138;
    double v140 = v128 + v139;
    double v141 = v140 / v13;
    double v142 = v127 * v141;
    double v143 = v87 * v2;
    double v144 = v26 * v37;
    double v145 = v27 * v36;
    double v146 = v144 + v145;
    double v147 = v35 * v28;
    double v148 = v34 * v29;
    double v149 = v147 + v148;
    double v150 = v146 + v149;
    double v151 = v150 * v44;
    double v152 = v52 * v134;
    double v153 = v151 + v152;
    double v154 = -v153;
    double v155 = v154 * v130;
    double v156 = -v137;
    double v157 = v155 + v156;
    double v158 = v143 + v157;
    double v159 = v158 * v105;
    double v160 = v140 / v104;
    double v161 = v108 * v160;
    double v162 = v159 - v161;
    double v163 = v17 * v37;
    double v164 = v44 * v124;
    double v165 = v163 + v164;
    double v166 = v162 * v165;
    double v167 = v142 + v166;
    double v168 = v116 + v167;
    double v169 = v80 * v21;
    double v170 = v16 * v59;
    double v171 = v169 + v170;
    double v172 = v171 + v149;
    double v173 = v172 * v44;
    double v174 = v21 * v59;
    double v175 = v174 + v133;
    double v176 = v52 * v175;
    double v177 = v173 + v176;
    double v178 = v177 * v74;
    double v179 = v44 * v175;
    double v180 = v131 + v179;
    double v181 = v111 * v180;
    double v182 = v178 + v181;
    double v183 = v34 * v17;
    double v184 = v20 * v28;
    double v185 = v183 + v184;
    double v186 = v80 * v37;
    double v187 = v27 * v59;
    double v188 = v186 + v187;
    double v189 = v188 * v44;
    double v190 = v37 * v59;
    double v191 = v52 * v190;
    double v192 = v189 + v191;
    double v193 = v185 + v192;
    double v194 = v193 * v141;
    double v195 = v17 * v28;
    double v196 = v44 * v190;
    double v197 = v195 + v196;
    double v198 = v162 * v197;
    double v199 = v194 + v198;
    double v200 = v182 + v199;
    double v201 = v98 * v74;
    double v202 = v111 * v68;
    double v203 = v201 + v202;
    double v204 = v153 * v141;
    double v205 = v162 * v136;
    double v206 = v204 + v205;
    double v207 = v203 + v206;
    double v208 = v171 + v146;
    double v209 = v208 * v44;
    double v210 = v174 + v132;
    double v211 = v52 * v210;
    double v212 = v209 + v211;
    double v213 = v72 / v13;
    double v214 = v212 * v213;
    double v215 = v102 * v105;
    double v216 = v72 / v104;
    double v217 = v108 * v216;
    double v218 = v215 - v217;
    double v219 = v44 * v210;
    double v220 = v131 + v219;
    double v221 = v218 * v220;
    double v222 = v214 + v221;
    double v223 = v2 * v0;
    double v224 = -v2;
    double v225 = v224 * v69;
    double v226 = v1 * v137;
    double v227 = v225 + v226;
    double v228 = v223 + v227;
    double v229 = -v228;
    double v230 = v229 / v13;
    double v231 = v127 * v230;
    double v232 = v99 * v224;
    double v233 = v154 * v1;
    double v234 = v232 + v233;
    double v235 = v2 + v234;
    double v236 = -v235;
    double v237 = v236 * v105;
    double v238 = v229 / v104;
    double v239 = v108 * v238;
    double v240 = v237 - v239;
    double v241 = v240 * v165;
    double v242 = v231 + v241;
    double v243 = v222 + v242;
    double v244 = v80 * v17;
    double v245 = v20 * v59;
    double v246 = v244 + v245;
    double v247 = v34 * v36;
    double v248 = v26 * v28;
    double v249 = v247 + v248;
    double v250 = v249 * v44;
    double v251 = v36 * v28;
    double v252 = v52 * v251;
    double v253 = v250 + v252;
    double v254 = v246 + v253;
    double v255 = v254 * v213;
    double v256 = v17 * v59;
    double v257 = v44 * v251;
    double v258 = v256 + v257;
    double v259 = v218 * v258;
    double v260 = v255 + v259;
    double v261 = v193 * v230;
    double v262 = v240 * v197;
    double v263 = v261 + v262;
    double v264 = v260 + v263;
    double v265 = v86 * v213;
    double v266 = v218 * v62;
    double v267 = v265 + v266;
    double v268 = v153 * v230;
    double v269 = v240 * v136;
    double v270 = v268 + v269;
    double v271 = v267 + v270;
    double v272 = -v140;
    double v273 = v272 / v13;
    double v274 = v212 * v273;
    double v275 = -v158;
    double v276 = v275 * v105;
    double v277 = v272 / v104;
    double v278 = v108 * v277;
    double v279 = v276 - v278;
    double v280 = v279 * v220;
    double v281 = v274 + v280;
    double v282 = v228 / v13;
    double v283 = v56 * v282;
    double v284 = v235 * v105;
    double v285 = v228 / v104;
    double v286 = v108 * v285;
    double v287 = v284 - v286;
    double v288 = v287 * v114;
    double v289 = v283 + v288;
    double v290 = v281 + v289;
    double v291 = v254 * v273;
    double v292 = v279 * v258;
    double v293 = v291 + v292;
    double v294 = v177 * v282;
    double v295 = v287 * v180;
    double v296 = v294 + v295;
    double v297 = v293 + v296;
    double v298 = v86 * v273;
    double v299 = v279 * v62;
    double v300 = v298 + v299;
    double v301 = v98 * v282;
    double v302 = v287 * v68;
    double v303 = v301 + v302;
    double v304 = v300 + v303;
    ddR_0_2(0, 0) = v168;
    ddR_0_2(0, 1) = v200;
    ddR_0_2(0, 2) = v207;
    ddR_0_2(1, 0) = v243;
    ddR_0_2(1, 1) = v264;
    ddR_0_2(1, 2) = v271;
    ddR_0_2(2, 0) = v290;
    ddR_0_2(2, 1) = v297;
    ddR_0_2(2, 2) = v304;

    return ddR_0_2;
}

/**
 * @brief Compute \f$ \frac{d^2R}{d\theta_1 d\theta_0} \f$
 * 
 * @param[in] v \f$ \theta \f$
 * @return The partial second derivative.
 */
inline Eigen::Matrix3d ddR_1_0(const Eigen::Vector3d& v) {
    Eigen::Matrix3d ddR_1_0;
    double v0 = v[0];
    double v1 = v[1];
    double v2 = v[2];
    double v3 = 0.500000;
    double v4 = v0 * v0;
    double v5 = v1 * v1;
    double v6 = v2 * v2;
    double v7 = v5 + v6;
    double v8 = v4 + v7;
    double v9 = sqrt(v8);
    double v10 = v3 / v9;
    double v11 = v1 + v1;
    double v12 = v10 * v11;
    double v13 = v9 * v9;
    double v14 = v2 / v13;
    double v15 = v12 * v14;
    double v16 = -v15;
    double v17 = sin(v9);
    double v18 = v16 * v17;
    double v19 = cos(v9);
    double v20 = v19 * v12;
    double v21 = v2 / v9;
    double v22 = v20 * v21;
    double v23 = v18 + v22;
    double v24 = v9 / v13;
    double v25 = v1 / v13;
    double v26 = v12 * v25;
    double v27 = v24 - v26;
    double v28 = -v27;
    double v29 = v0 / v9;
    double v30 = -v29;
    double v31 = v28 * v30;
    double v32 = v0 / v13;
    double v33 = v12 * v32;
    double v34 = -v33;
    double v35 = -v34;
    double v36 = v1 / v9;
    double v37 = -v36;
    double v38 = v35 * v37;
    double v39 = v31 + v38;
    double v40 = 2.000000;
    double v41 = v3 * v9;
    double v42 = sin(v41);
    double v43 = v40 * v42;
    double v44 = v43 * v42;
    double v45 = v39 * v44;
    double v46 = cos(v41);
    double v47 = v3 * v12;
    double v48 = v46 * v47;
    double v49 = v48 * v43;
    double v50 = v48 * v40;
    double v51 = v50 * v42;
    double v52 = v49 + v51;
    double v53 = v30 * v37;
    double v54 = v52 * v53;
    double v55 = v45 + v54;
    double v56 = v23 + v55;
    double v57 = v0 * v2;
    double v58 = -v1;
    double v59 = 1.000000;
    double v60 = -v21;
    double v61 = v60 * v21;
    double v62 = v36 * v37;
    double v63 = v61 + v62;
    double v64 = v44 * v63;
    double v65 = v59 + v64;
    double v66 = v59 - v65;
    double v67 = v58 * v66;
    double v68 = v17 * v21;
    double v69 = v44 * v53;
    double v70 = v68 + v69;
    double v71 = -v70;
    double v72 = v0 * v71;
    double v73 = v67 + v72;
    double v74 = v57 + v73;
    double v75 = -v74;
    double v76 = v75 / v13;
    double v77 = v56 * v76;
    double v78 = v16 * v60;
    double v79 = -v16;
    double v80 = v79 * v21;
    double v81 = v78 + v80;
    double v82 = v28 * v36;
    double v83 = v27 * v37;
    double v84 = v82 + v83;
    double v85 = v81 + v84;
    double v86 = v85 * v44;
    double v87 = v52 * v63;
    double v88 = v86 + v87;
    double v89 = -v88;
    double v90 = v89 * v58;
    double v91 = -v66;
    double v92 = v90 + v91;
    double v93 = -v56;
    double v94 = v93 * v0;
    double v95 = v92 + v94;
    double v96 = -v95;
    double v97 = v13 * v13;
    double v98 = v13 / v97;
    double v99 = v96 * v98;
    double v100 = v12 * v9;
    double v101 = v100 + v100;
    double v102 = v75 / v97;
    double v103 = v101 * v102;
    double v104 = v99 - v103;
    double v105 = v104 * v70;
    double v106 = v77 + v105;
    double v107 = v28 * v17;
    double v108 = v20 * v37;
    double v109 = v107 + v108;
    double v110 = v16 * v29;
    double v111 = v34 * v21;
    double v112 = v110 + v111;
    double v113 = v112 * v44;
    double v114 = v29 * v21;
    double v115 = v52 * v114;
    double v116 = v113 + v115;
    double v117 = v109 + v116;
    double v118 = v0 * v1;
    double v119 = v2 * v66;
    double v120 = -v0;
    double v121 = v17 * v37;
    double v122 = v44 * v114;
    double v123 = v121 + v122;
    double v124 = -v123;
    double v125 = v120 * v124;
    double v126 = v119 + v125;
    double v127 = v118 + v126;
    double v128 = v127 / v13;
    double v129 = v117 * v128;
    double v130 = v89 * v2;
    double v131 = -v117;
    double v132 = v131 * v120;
    double v133 = v130 + v132;
    double v134 = v0 + v133;
    double v135 = v134 * v98;
    double v136 = v127 / v97;
    double v137 = v101 * v136;
    double v138 = v135 - v137;
    double v139 = v138 * v123;
    double v140 = v129 + v139;
    double v141 = v106 + v140;
    double v142 = v34 * v30;
    double v143 = v35 * v29;
    double v144 = v142 + v143;
    double v145 = v81 + v144;
    double v146 = v145 * v44;
    double v147 = v30 * v29;
    double v148 = v61 + v147;
    double v149 = v52 * v148;
    double v150 = v146 + v149;
    double v151 = v150 * v76;
    double v152 = v44 * v148;
    double v153 = v59 + v152;
    double v154 = v104 * v153;
    double v155 = v151 + v154;
    double v156 = v34 * v17;
    double v157 = v20 * v29;
    double v158 = v156 + v157;
    double v159 = v79 * v37;
    double v160 = v28 * v60;
    double v161 = v159 + v160;
    double v162 = v161 * v44;
    double v163 = v37 * v60;
    double v164 = v52 * v163;
    double v165 = v162 + v164;
    double v166 = v158 + v165;
    double v167 = v166 * v128;
    double v168 = v17 * v29;
    double v169 = v44 * v163;
    double v170 = v168 + v169;
    double v171 = v138 * v170;
    double v172 = v167 + v171;
    double v173 = v155 + v172;
    double v174 = v35 * v17;
    double v175 = v20 * v30;
    double v176 = v174 + v175;
    double v177 = v27 * v21;
    double v178 = v16 * v36;
    double v179 = v177 + v178;
    double v180 = v179 * v44;
    double v181 = v21 * v36;
    double v182 = v52 * v181;
    double v183 = v180 + v182;
    double v184 = v176 + v183;
    double v185 = v184 * v76;
    double v186 = v17 * v30;
    double v187 = v44 * v181;
    double v188 = v186 + v187;
    double v189 = v104 * v188;
    double v190 = v185 + v189;
    double v191 = v84 + v144;
    double v192 = v191 * v44;
    double v193 = v62 + v147;
    double v194 = v52 * v193;
    double v195 = v192 + v194;
    double v196 = v195 * v128;
    double v197 = v44 * v193;
    double v198 = v59 + v197;
    double v199 = v138 * v198;
    double v200 = v196 + v199;
    double v201 = v190 + v200;
    double v202 = v74 / v13;
    double v203 = v88 * v202;
    double v204 = v95 * v98;
    double v205 = v74 / v97;
    double v206 = v101 * v205;
    double v207 = v204 - v206;
    double v208 = v207 * v65;
    double v209 = v203 + v208;
    double v210 = -v2;
    double v211 = v210 * v71;
    double v212 = v1 * v124;
    double v213 = v211 + v212;
    double v214 = v4 + v213;
    double v215 = -v214;
    double v216 = v215 / v13;
    double v217 = v117 * v216;
    double v218 = v93 * v210;
    double v219 = v131 * v1;
    double v220 = v219 + v124;
    double v221 = v218 + v220;
    double v222 = -v221;
    double v223 = v222 * v98;
    double v224 = v215 / v97;
    double v225 = v101 * v224;
    double v226 = v223 - v225;
    double v227 = v226 * v123;
    double v228 = v217 + v227;
    double v229 = v209 + v228;
    double v230 = v79 * v17;
    double v231 = v20 * v60;
    double v232 = v230 + v231;
    double v233 = v34 * v36;
    double v234 = v27 * v29;
    double v235 = v233 + v234;
    double v236 = v235 * v44;
    double v237 = v36 * v29;
    double v238 = v52 * v237;
    double v239 = v236 + v238;
    double v240 = v232 + v239;
    double v241 = v240 * v202;
    double v242 = v17 * v60;
    double v243 = v44 * v237;
    double v244 = v242 + v243;
    double v245 = v207 * v244;
    double v246 = v241 + v245;
    double v247 = v166 * v216;
    double v248 = v226 * v170;
    double v249 = v247 + v248;
    double v250 = v246 + v249;
    double v251 = v27 * v17;
    double v252 = v20 * v36;
    double v253 = v251 + v252;
    double v254 = v35 * v60;
    double v255 = v79 * v30;
    double v256 = v254 + v255;
    double v257 = v256 * v44;
    double v258 = v60 * v30;
    double v259 = v52 * v258;
    double v260 = v257 + v259;
    double v261 = v253 + v260;
    double v262 = v261 * v202;
    double v263 = v17 * v36;
    double v264 = v44 * v258;
    double v265 = v263 + v264;
    double v266 = v207 * v265;
    double v267 = v262 + v266;
    double v268 = v195 * v216;
    double v269 = v226 * v198;
    double v270 = v268 + v269;
    double v271 = v267 + v270;
    double v272 = -v127;
    double v273 = v272 / v13;
    double v274 = v88 * v273;
    double v275 = -v134;
    double v276 = v275 * v98;
    double v277 = v272 / v97;
    double v278 = v101 * v277;
    double v279 = v276 - v278;
    double v280 = v279 * v65;
    double v281 = v274 + v280;
    double v282 = v214 / v13;
    double v283 = v56 * v282;
    double v284 = v221 * v98;
    double v285 = v214 / v97;
    double v286 = v101 * v285;
    double v287 = v284 - v286;
    double v288 = v287 * v70;
    double v289 = v283 + v288;
    double v290 = v281 + v289;
    double v291 = v240 * v273;
    double v292 = v279 * v244;
    double v293 = v291 + v292;
    double v294 = v150 * v282;
    double v295 = v287 * v153;
    double v296 = v294 + v295;
    double v297 = v293 + v296;
    double v298 = v261 * v273;
    double v299 = v279 * v265;
    double v300 = v298 + v299;
    double v301 = v184 * v282;
    double v302 = v287 * v188;
    double v303 = v301 + v302;
    double v304 = v300 + v303;
    ddR_1_0(0, 0) = v141;
    ddR_1_0(0, 1) = v173;
    ddR_1_0(0, 2) = v201;
    ddR_1_0(1, 0) = v229;
    ddR_1_0(1, 1) = v250;
    ddR_1_0(1, 2) = v271;
    ddR_1_0(2, 0) = v290;
    ddR_1_0(2, 1) = v297;
    ddR_1_0(2, 2) = v304;

    return ddR_1_0;
}

/**
 * @brief Compute \f$ \frac{d^2R}{d\theta_1 d\theta_1} \f$
 * 
 * @param[in] v \f$ \theta \f$
 * @return The partial second derivative.
 */
inline Eigen::Matrix3d ddR_1_1(const Eigen::Vector3d& v) {
    Eigen::Matrix3d ddR_1_1;
    double v0 = v[0];
    double v1 = v[1];
    double v2 = v[2];
    double v3 = 0.500000;
    double v4 = v0 * v0;
    double v5 = v1 * v1;
    double v6 = v2 * v2;
    double v7 = v5 + v6;
    double v8 = v4 + v7;
    double v9 = sqrt(v8);
    double v10 = v3 / v9;
    double v11 = v1 + v1;
    double v12 = v10 * v11;
    double v13 = v9 * v9;
    double v14 = v2 / v13;
    double v15 = v12 * v14;
    double v16 = -v15;
    double v17 = sin(v9);
    double v18 = v16 * v17;
    double v19 = cos(v9);
    double v20 = v19 * v12;
    double v21 = v2 / v9;
    double v22 = v20 * v21;
    double v23 = v18 + v22;
    double v24 = v9 / v13;
    double v25 = v1 / v13;
    double v26 = v12 * v25;
    double v27 = v24 - v26;
    double v28 = -v27;
    double v29 = v0 / v9;
    double v30 = -v29;
    double v31 = v28 * v30;
    double v32 = v0 / v13;
    double v33 = v12 * v32;
    double v34 = -v33;
    double v35 = -v34;
    double v36 = v1 / v9;
    double v37 = -v36;
    double v38 = v35 * v37;
    double v39 = v31 + v38;
    double v40 = 2.000000;
    double v41 = v3 * v9;
    double v42 = sin(v41);
    double v43 = v40 * v42;
    double v44 = v43 * v42;
    double v45 = v39 * v44;
    double v46 = cos(v41);
    double v47 = v3 * v12;
    double v48 = v46 * v47;
    double v49 = v48 * v43;
    double v50 = v48 * v40;
    double v51 = v50 * v42;
    double v52 = v49 + v51;
    double v53 = v30 * v37;
    double v54 = v52 * v53;
    double v55 = v45 + v54;
    double v56 = v23 + v55;
    double v57 = v1 * v2;
    double v58 = -v1;
    double v59 = -v21;
    double v60 = v17 * v59;
    double v61 = v36 * v29;
    double v62 = v44 * v61;
    double v63 = v60 + v62;
    double v64 = -v63;
    double v65 = v58 * v64;
    double v66 = 1.000000;
    double v67 = v21 * v59;
    double v68 = v30 * v29;
    double v69 = v67 + v68;
    double v70 = v44 * v69;
    double v71 = v66 + v70;
    double v72 = v66 - v71;
    double v73 = v0 * v72;
    double v74 = v65 + v73;
    double v75 = v57 + v74;
    double v76 = -v75;
    double v77 = v76 / v13;
    double v78 = v56 * v77;
    double v79 = -v16;
    double v80 = v79 * v17;
    double v81 = v20 * v59;
    double v82 = v80 + v81;
    double v83 = v34 * v36;
    double v84 = v27 * v29;
    double v85 = v83 + v84;
    double v86 = v85 * v44;
    double v87 = v52 * v61;
    double v88 = v86 + v87;
    double v89 = v82 + v88;
    double v90 = -v89;
    double v91 = v90 * v58;
    double v92 = -v64;
    double v93 = v91 + v92;
    double v94 = v79 * v21;
    double v95 = v16 * v59;
    double v96 = v94 + v95;
    double v97 = v34 * v30;
    double v98 = v35 * v29;
    double v99 = v97 + v98;
    double v100 = v96 + v99;
    double v101 = v100 * v44;
    double v102 = v52 * v69;
    double v103 = v101 + v102;
    double v104 = -v103;
    double v105 = v104 * v0;
    double v106 = v93 + v105;
    double v107 = v2 + v106;
    double v108 = -v107;
    double v109 = v13 * v13;
    double v110 = v13 / v109;
    double v111 = v108 * v110;
    double v112 = v12 * v9;
    double v113 = v112 + v112;
    double v114 = v76 / v109;
    double v115 = v113 * v114;
    double v116 = v111 - v115;
    double v117 = v17 * v21;
    double v118 = v44 * v53;
    double v119 = v117 + v118;
    double v120 = v116 * v119;
    double v121 = v78 + v120;
    double v122 = v28 * v17;
    double v123 = v20 * v37;
    double v124 = v122 + v123;
    double v125 = v16 * v29;
    double v126 = v34 * v21;
    double v127 = v125 + v126;
    double v128 = v127 * v44;
    double v129 = v29 * v21;
    double v130 = v52 * v129;
    double v131 = v128 + v130;
    double v132 = v124 + v131;
    double v133 = v2 * v64;
    double v134 = -v0;
    double v135 = v17 * v29;
    double v136 = v37 * v59;
    double v137 = v44 * v136;
    double v138 = v135 + v137;
    double v139 = -v138;
    double v140 = v134 * v139;
    double v141 = v133 + v140;
    double v142 = v5 + v141;
    double v143 = v142 / v13;
    double v144 = v132 * v143;
    double v145 = v90 * v2;
    double v146 = v34 * v17;
    double v147 = v20 * v29;
    double v148 = v146 + v147;
    double v149 = v79 * v37;
    double v150 = v28 * v59;
    double v151 = v149 + v150;
    double v152 = v151 * v44;
    double v153 = v52 * v136;
    double v154 = v152 + v153;
    double v155 = v148 + v154;
    double v156 = -v155;
    double v157 = v156 * v134;
    double v158 = v145 + v157;
    double v159 = v11 + v158;
    double v160 = v159 * v110;
    double v161 = v142 / v109;
    double v162 = v113 * v161;
    double v163 = v160 - v162;
    double v164 = v17 * v37;
    double v165 = v44 * v129;
    double v166 = v164 + v165;
    double v167 = v163 * v166;
    double v168 = v144 + v167;
    double v169 = v121 + v168;
    double v170 = v103 * v77;
    double v171 = v116 * v71;
    double v172 = v170 + v171;
    double v173 = v155 * v143;
    double v174 = v163 * v138;
    double v175 = v173 + v174;
    double v176 = v172 + v175;
    double v177 = v35 * v17;
    double v178 = v20 * v30;
    double v179 = v177 + v178;
    double v180 = v27 * v21;
    double v181 = v16 * v36;
    double v182 = v180 + v181;
    double v183 = v182 * v44;
    double v184 = v21 * v36;
    double v185 = v52 * v184;
    double v186 = v183 + v185;
    double v187 = v179 + v186;
    double v188 = v187 * v77;
    double v189 = v17 * v30;
    double v190 = v44 * v184;
    double v191 = v189 + v190;
    double v192 = v116 * v191;
    double v193 = v188 + v192;
    double v194 = v27 * v37;
    double v195 = v28 * v36;
    double v196 = v194 + v195;
    double v197 = v196 + v99;
    double v198 = v197 * v44;
    double v199 = v37 * v36;
    double v200 = v199 + v68;
    double v201 = v52 * v200;
    double v202 = v198 + v201;
    double v203 = v202 * v143;
    double v204 = v44 * v200;
    double v205 = v66 + v204;
    double v206 = v163 * v205;
    double v207 = v203 + v206;
    double v208 = v193 + v207;
    double v209 = v96 + v196;
    double v210 = v209 * v44;
    double v211 = v67 + v199;
    double v212 = v52 * v211;
    double v213 = v210 + v212;
    double v214 = v75 / v13;
    double v215 = v213 * v214;
    double v216 = v107 * v110;
    double v217 = v75 / v109;
    double v218 = v113 * v217;
    double v219 = v216 - v218;
    double v220 = v44 * v211;
    double v221 = v66 + v220;
    double v222 = v219 * v221;
    double v223 = v215 + v222;
    double v224 = v1 * v0;
    double v225 = -v2;
    double v226 = v225 * v72;
    double v227 = v1 * v139;
    double v228 = v226 + v227;
    double v229 = v224 + v228;
    double v230 = -v229;
    double v231 = v230 / v13;
    double v232 = v132 * v231;
    double v233 = v104 * v225;
    double v234 = v156 * v1;
    double v235 = v234 + v139;
    double v236 = v233 + v235;
    double v237 = v0 + v236;
    double v238 = -v237;
    double v239 = v238 * v110;
    double v240 = v230 / v109;
    double v241 = v113 * v240;
    double v242 = v239 - v241;
    double v243 = v242 * v166;
    double v244 = v232 + v243;
    double v245 = v223 + v244;
    double v246 = v89 * v214;
    double v247 = v219 * v63;
    double v248 = v246 + v247;
    double v249 = v155 * v231;
    double v250 = v242 * v138;
    double v251 = v249 + v250;
    double v252 = v248 + v251;
    double v253 = v27 * v17;
    double v254 = v20 * v36;
    double v255 = v253 + v254;
    double v256 = v35 * v59;
    double v257 = v79 * v30;
    double v258 = v256 + v257;
    double v259 = v258 * v44;
    double v260 = v59 * v30;
    double v261 = v52 * v260;
    double v262 = v259 + v261;
    double v263 = v255 + v262;
    double v264 = v263 * v214;
    double v265 = v17 * v36;
    double v266 = v44 * v260;
    double v267 = v265 + v266;
    double v268 = v219 * v267;
    double v269 = v264 + v268;
    double v270 = v202 * v231;
    double v271 = v242 * v205;
    double v272 = v270 + v271;
    double v273 = v269 + v272;
    double v274 = -v142;
    double v275 = v274 / v13;
    double v276 = v213 * v275;
    double v277 = -v159;
    double v278 = v277 * v110;
    double v279 = v274 / v109;
    double v280 = v113 * v279;
    double v281 = v278 - v280;
    double v282 = v281 * v221;
    double v283 = v276 + v282;
    double v284 = v229 / v13;
    double v285 = v56 * v284;
    double v286 = v237 * v110;
    double v287 = v229 / v109;
    double v288 = v113 * v287;
    double v289 = v286 - v288;
    double v290 = v289 * v119;
    double v291 = v285 + v290;
    double v292 = v283 + v291;
    double v293 = v89 * v275;
    double v294 = v281 * v63;
    double v295 = v293 + v294;
    double v296 = v103 * v284;
    double v297 = v289 * v71;
    double v298 = v296 + v297;
    double v299 = v295 + v298;
    double v300 = v263 * v275;
    double v301 = v281 * v267;
    double v302 = v300 + v301;
    double v303 = v187 * v284;
    double v304 = v289 * v191;
    double v305 = v303 + v304;
    double v306 = v302 + v305;
    ddR_1_1(0, 0) = v169;
    ddR_1_1(0, 1) = v176;
    ddR_1_1(0, 2) = v208;
    ddR_1_1(1, 0) = v245;
    ddR_1_1(1, 1) = v252;
    ddR_1_1(1, 2) = v273;
    ddR_1_1(2, 0) = v292;
    ddR_1_1(2, 1) = v299;
    ddR_1_1(2, 2) = v306;

    return ddR_1_1;
}

/**
 * @brief Compute \f$ \frac{d^2R}{d\theta_1 d\theta_2} \f$
 * 
 * @param[in] v \f$ \theta \f$
 * @return The partial second derivative.
 */
inline Eigen::Matrix3d ddR_1_2(const Eigen::Vector3d& v) {
    Eigen::Matrix3d ddR_1_2;
    double v0 = v[0];
    double v1 = v[1];
    double v2 = v[2];
    double v3 = 0.500000;
    double v4 = v0 * v0;
    double v5 = v1 * v1;
    double v6 = v2 * v2;
    double v7 = v5 + v6;
    double v8 = v4 + v7;
    double v9 = sqrt(v8);
    double v10 = v3 / v9;
    double v11 = v1 + v1;
    double v12 = v10 * v11;
    double v13 = v9 * v9;
    double v14 = v2 / v13;
    double v15 = v12 * v14;
    double v16 = -v15;
    double v17 = sin(v9);
    double v18 = v16 * v17;
    double v19 = cos(v9);
    double v20 = v19 * v12;
    double v21 = v2 / v9;
    double v22 = v20 * v21;
    double v23 = v18 + v22;
    double v24 = v9 / v13;
    double v25 = v1 / v13;
    double v26 = v12 * v25;
    double v27 = v24 - v26;
    double v28 = -v27;
    double v29 = v0 / v9;
    double v30 = -v29;
    double v31 = v28 * v30;
    double v32 = v0 / v13;
    double v33 = v12 * v32;
    double v34 = -v33;
    double v35 = -v34;
    double v36 = v1 / v9;
    double v37 = -v36;
    double v38 = v35 * v37;
    double v39 = v31 + v38;
    double v40 = 2.000000;
    double v41 = v3 * v9;
    double v42 = sin(v41);
    double v43 = v40 * v42;
    double v44 = v43 * v42;
    double v45 = v39 * v44;
    double v46 = cos(v41);
    double v47 = v3 * v12;
    double v48 = v46 * v47;
    double v49 = v48 * v43;
    double v50 = v48 * v40;
    double v51 = v50 * v42;
    double v52 = v49 + v51;
    double v53 = v30 * v37;
    double v54 = v52 * v53;
    double v55 = v45 + v54;
    double v56 = v23 + v55;
    double v57 = -v1;
    double v58 = v17 * v36;
    double v59 = -v21;
    double v60 = v59 * v30;
    double v61 = v44 * v60;
    double v62 = v58 + v61;
    double v63 = -v62;
    double v64 = v57 * v63;
    double v65 = v17 * v30;
    double v66 = v21 * v36;
    double v67 = v44 * v66;
    double v68 = v65 + v67;
    double v69 = -v68;
    double v70 = v0 * v69;
    double v71 = v64 + v70;
    double v72 = v6 + v71;
    double v73 = -v72;
    double v74 = v73 / v13;
    double v75 = v56 * v74;
    double v76 = v27 * v17;
    double v77 = v20 * v36;
    double v78 = v76 + v77;
    double v79 = v35 * v59;
    double v80 = -v16;
    double v81 = v80 * v30;
    double v82 = v79 + v81;
    double v83 = v82 * v44;
    double v84 = v52 * v60;
    double v85 = v83 + v84;
    double v86 = v78 + v85;
    double v87 = -v86;
    double v88 = v87 * v57;
    double v89 = -v63;
    double v90 = v88 + v89;
    double v91 = v35 * v17;
    double v92 = v20 * v30;
    double v93 = v91 + v92;
    double v94 = v27 * v21;
    double v95 = v16 * v36;
    double v96 = v94 + v95;
    double v97 = v96 * v44;
    double v98 = v52 * v66;
    double v99 = v97 + v98;
    double v100 = v93 + v99;
    double v101 = -v100;
    double v102 = v101 * v0;
    double v103 = v90 + v102;
    double v104 = -v103;
    double v105 = v13 * v13;
    double v106 = v13 / v105;
    double v107 = v104 * v106;
    double v108 = v12 * v9;
    double v109 = v108 + v108;
    double v110 = v73 / v105;
    double v111 = v109 * v110;
    double v112 = v107 - v111;
    double v113 = v17 * v21;
    double v114 = v44 * v53;
    double v115 = v113 + v114;
    double v116 = v112 * v115;
    double v117 = v75 + v116;
    double v118 = v28 * v17;
    double v119 = v20 * v37;
    double v120 = v118 + v119;
    double v121 = v16 * v29;
    double v122 = v34 * v21;
    double v123 = v121 + v122;
    double v124 = v123 * v44;
    double v125 = v29 * v21;
    double v126 = v52 * v125;
    double v127 = v124 + v126;
    double v128 = v120 + v127;
    double v129 = v2 * v1;
    double v130 = v2 * v63;
    double v131 = -v0;
    double v132 = 1.000000;
    double v133 = v37 * v36;
    double v134 = v29 * v30;
    double v135 = v133 + v134;
    double v136 = v44 * v135;
    double v137 = v132 + v136;
    double v138 = v132 - v137;
    double v139 = v131 * v138;
    double v140 = v130 + v139;
    double v141 = v129 + v140;
    double v142 = v141 / v13;
    double v143 = v128 * v142;
    double v144 = v87 * v2;
    double v145 = v27 * v37;
    double v146 = v28 * v36;
    double v147 = v145 + v146;
    double v148 = v35 * v29;
    double v149 = v34 * v30;
    double v150 = v148 + v149;
    double v151 = v147 + v150;
    double v152 = v151 * v44;
    double v153 = v52 * v135;
    double v154 = v152 + v153;
    double v155 = -v154;
    double v156 = v155 * v131;
    double v157 = v144 + v156;
    double v158 = v2 + v157;
    double v159 = v158 * v106;
    double v160 = v141 / v105;
    double v161 = v109 * v160;
    double v162 = v159 - v161;
    double v163 = v17 * v37;
    double v164 = v44 * v125;
    double v165 = v163 + v164;
    double v166 = v162 * v165;
    double v167 = v143 + v166;
    double v168 = v117 + v167;
    double v169 = v80 * v21;
    double v170 = v16 * v59;
    double v171 = v169 + v170;
    double v172 = v171 + v150;
    double v173 = v172 * v44;
    double v174 = v21 * v59;
    double v175 = v174 + v134;
    double v176 = v52 * v175;
    double v177 = v173 + v176;
    double v178 = v177 * v74;
    double v179 = v44 * v175;
    double v180 = v132 + v179;
    double v181 = v112 * v180;
    double v182 = v178 + v181;
    double v183 = v34 * v17;
    double v184 = v20 * v29;
    double v185 = v183 + v184;
    double v186 = v80 * v37;
    double v187 = v28 * v59;
    double v188 = v186 + v187;
    double v189 = v188 * v44;
    double v190 = v37 * v59;
    double v191 = v52 * v190;
    double v192 = v189 + v191;
    double v193 = v185 + v192;
    double v194 = v193 * v142;
    double v195 = v17 * v29;
    double v196 = v44 * v190;
    double v197 = v195 + v196;
    double v198 = v162 * v197;
    double v199 = v194 + v198;
    double v200 = v182 + v199;
    double v201 = v100 * v74;
    double v202 = v112 * v68;
    double v203 = v201 + v202;
    double v204 = v154 * v142;
    double v205 = v162 * v137;
    double v206 = v204 + v205;
    double v207 = v203 + v206;
    double v208 = v171 + v147;
    double v209 = v208 * v44;
    double v210 = v174 + v133;
    double v211 = v52 * v210;
    double v212 = v209 + v211;
    double v213 = v72 / v13;
    double v214 = v212 * v213;
    double v215 = v103 * v106;
    double v216 = v72 / v105;
    double v217 = v109 * v216;
    double v218 = v215 - v217;
    double v219 = v44 * v210;
    double v220 = v132 + v219;
    double v221 = v218 * v220;
    double v222 = v214 + v221;
    double v223 = v2 * v0;
    double v224 = -v2;
    double v225 = v224 * v69;
    double v226 = v1 * v138;
    double v227 = v225 + v226;
    double v228 = v223 + v227;
    double v229 = -v228;
    double v230 = v229 / v13;
    double v231 = v128 * v230;
    double v232 = v101 * v224;
    double v233 = v155 * v1;
    double v234 = v233 + v138;
    double v235 = v232 + v234;
    double v236 = -v235;
    double v237 = v236 * v106;
    double v238 = v229 / v105;
    double v239 = v109 * v238;
    double v240 = v237 - v239;
    double v241 = v240 * v165;
    double v242 = v231 + v241;
    double v243 = v222 + v242;
    double v244 = v80 * v17;
    double v245 = v20 * v59;
    double v246 = v244 + v245;
    double v247 = v34 * v36;
    double v248 = v27 * v29;
    double v249 = v247 + v248;
    double v250 = v249 * v44;
    double v251 = v36 * v29;
    double v252 = v52 * v251;
    double v253 = v250 + v252;
    double v254 = v246 + v253;
    double v255 = v254 * v213;
    double v256 = v17 * v59;
    double v257 = v44 * v251;
    double v258 = v256 + v257;
    double v259 = v218 * v258;
    double v260 = v255 + v259;
    double v261 = v193 * v230;
    double v262 = v240 * v197;
    double v263 = v261 + v262;
    double v264 = v260 + v263;
    double v265 = v86 * v213;
    double v266 = v218 * v62;
    double v267 = v265 + v266;
    double v268 = v154 * v230;
    double v269 = v240 * v137;
    double v270 = v268 + v269;
    double v271 = v267 + v270;
    double v272 = -v141;
    double v273 = v272 / v13;
    double v274 = v212 * v273;
    double v275 = -v158;
    double v276 = v275 * v106;
    double v277 = v272 / v105;
    double v278 = v109 * v277;
    double v279 = v276 - v278;
    double v280 = v279 * v220;
    double v281 = v274 + v280;
    double v282 = v228 / v13;
    double v283 = v56 * v282;
    double v284 = v235 * v106;
    double v285 = v228 / v105;
    double v286 = v109 * v285;
    double v287 = v284 - v286;
    double v288 = v287 * v115;
    double v289 = v283 + v288;
    double v290 = v281 + v289;
    double v291 = v254 * v273;
    double v292 = v279 * v258;
    double v293 = v291 + v292;
    double v294 = v177 * v282;
    double v295 = v287 * v180;
    double v296 = v294 + v295;
    double v297 = v293 + v296;
    double v298 = v86 * v273;
    double v299 = v279 * v62;
    double v300 = v298 + v299;
    double v301 = v100 * v282;
    double v302 = v287 * v68;
    double v303 = v301 + v302;
    double v304 = v300 + v303;
    ddR_1_2(0, 0) = v168;
    ddR_1_2(0, 1) = v200;
    ddR_1_2(0, 2) = v207;
    ddR_1_2(1, 0) = v243;
    ddR_1_2(1, 1) = v264;
    ddR_1_2(1, 2) = v271;
    ddR_1_2(2, 0) = v290;
    ddR_1_2(2, 1) = v297;
    ddR_1_2(2, 2) = v304;

    return ddR_1_2;
}

/**
 * @brief Compute \f$ \frac{d^2R}{d\theta_2 d\theta_0} \f$
 * 
 * @param[in] v \f$ \theta \f$
 * @return The partial second derivative.
 */
inline Eigen::Matrix3d ddR_2_0(const Eigen::Vector3d& v) {
    Eigen::Matrix3d ddR_2_0;
    double v0 = v[0];
    double v1 = v[1];
    double v2 = v[2];
    double v3 = v0 * v0;
    double v4 = v1 * v1;
    double v5 = v2 * v2;
    double v6 = v4 + v5;
    double v7 = v3 + v6;
    double v8 = sqrt(v7);
    double v9 = v8 * v8;
    double v10 = v8 / v9;
    double v11 = 0.500000;
    double v12 = v11 / v8;
    double v13 = v2 + v2;
    double v14 = v12 * v13;
    double v15 = v2 / v9;
    double v16 = v14 * v15;
    double v17 = v10 - v16;
    double v18 = sin(v8);
    double v19 = v17 * v18;
    double v20 = cos(v8);
    double v21 = v20 * v14;
    double v22 = v2 / v8;
    double v23 = v21 * v22;
    double v24 = v19 + v23;
    double v25 = v1 / v9;
    double v26 = v14 * v25;
    double v27 = -v26;
    double v28 = -v27;
    double v29 = v0 / v8;
    double v30 = -v29;
    double v31 = v28 * v30;
    double v32 = v0 / v9;
    double v33 = v14 * v32;
    double v34 = -v33;
    double v35 = -v34;
    double v36 = v1 / v8;
    double v37 = -v36;
    double v38 = v35 * v37;
    double v39 = v31 + v38;
    double v40 = 2.000000;
    double v41 = v11 * v8;
    double v42 = sin(v41);
    double v43 = v40 * v42;
    double v44 = v43 * v42;
    double v45 = v39 * v44;
    double v46 = cos(v41);
    double v47 = v11 * v14;
    double v48 = v46 * v47;
    double v49 = v48 * v43;
    double v50 = v48 * v40;
    double v51 = v50 * v42;
    double v52 = v49 + v51;
    double v53 = v30 * v37;
    double v54 = v52 * v53;
    double v55 = v45 + v54;
    double v56 = v24 + v55;
    double v57 = v0 * v2;
    double v58 = -v1;
    double v59 = 1.000000;
    double v60 = -v22;
    double v61 = v60 * v22;
    double v62 = v36 * v37;
    double v63 = v61 + v62;
    double v64 = v44 * v63;
    double v65 = v59 + v64;
    double v66 = v59 - v65;
    double v67 = v58 * v66;
    double v68 = v18 * v22;
    double v69 = v44 * v53;
    double v70 = v68 + v69;
    double v71 = -v70;
    double v72 = v0 * v71;
    double v73 = v67 + v72;
    double v74 = v57 + v73;
    double v75 = -v74;
    double v76 = v75 / v9;
    double v77 = v56 * v76;
    double v78 = v17 * v60;
    double v79 = -v17;
    double v80 = v79 * v22;
    double v81 = v78 + v80;
    double v82 = v28 * v36;
    double v83 = v27 * v37;
    double v84 = v82 + v83;
    double v85 = v81 + v84;
    double v86 = v85 * v44;
    double v87 = v52 * v63;
    double v88 = v86 + v87;
    double v89 = -v88;
    double v90 = v89 * v58;
    double v91 = -v56;
    double v92 = v91 * v0;
    double v93 = v90 + v92;
    double v94 = v0 + v93;
    double v95 = -v94;
    double v96 = v9 * v9;
    double v97 = v9 / v96;
    double v98 = v95 * v97;
    double v99 = v14 * v8;
    double v100 = v99 + v99;
    double v101 = v75 / v96;
    double v102 = v100 * v101;
    double v103 = v98 - v102;
    double v104 = v103 * v70;
    double v105 = v77 + v104;
    double v106 = v28 * v18;
    double v107 = v21 * v37;
    double v108 = v106 + v107;
    double v109 = v17 * v29;
    double v110 = v34 * v22;
    double v111 = v109 + v110;
    double v112 = v111 * v44;
    double v113 = v29 * v22;
    double v114 = v52 * v113;
    double v115 = v112 + v114;
    double v116 = v108 + v115;
    double v117 = v0 * v1;
    double v118 = v2 * v66;
    double v119 = -v0;
    double v120 = v18 * v37;
    double v121 = v44 * v113;
    double v122 = v120 + v121;
    double v123 = -v122;
    double v124 = v119 * v123;
    double v125 = v118 + v124;
    double v126 = v117 + v125;
    double v127 = v126 / v9;
    double v128 = v116 * v127;
    double v129 = v89 * v2;
    double v130 = v129 + v66;
    double v131 = -v116;
    double v132 = v131 * v119;
    double v133 = v130 + v132;
    double v134 = v133 * v97;
    double v135 = v126 / v96;
    double v136 = v100 * v135;
    double v137 = v134 - v136;
    double v138 = v137 * v122;
    double v139 = v128 + v138;
    double v140 = v105 + v139;
    double v141 = v34 * v30;
    double v142 = v35 * v29;
    double v143 = v141 + v142;
    double v144 = v81 + v143;
    double v145 = v144 * v44;
    double v146 = v30 * v29;
    double v147 = v61 + v146;
    double v148 = v52 * v147;
    double v149 = v145 + v148;
    double v150 = v149 * v76;
    double v151 = v44 * v147;
    double v152 = v59 + v151;
    double v153 = v103 * v152;
    double v154 = v150 + v153;
    double v155 = v34 * v18;
    double v156 = v21 * v29;
    double v157 = v155 + v156;
    double v158 = v79 * v37;
    double v159 = v28 * v60;
    double v160 = v158 + v159;
    double v161 = v160 * v44;
    double v162 = v37 * v60;
    double v163 = v52 * v162;
    double v164 = v161 + v163;
    double v165 = v157 + v164;
    double v166 = v165 * v127;
    double v167 = v18 * v29;
    double v168 = v44 * v162;
    double v169 = v167 + v168;
    double v170 = v137 * v169;
    double v171 = v166 + v170;
    double v172 = v154 + v171;
    double v173 = v35 * v18;
    double v174 = v21 * v30;
    double v175 = v173 + v174;
    double v176 = v27 * v22;
    double v177 = v17 * v36;
    double v178 = v176 + v177;
    double v179 = v178 * v44;
    double v180 = v22 * v36;
    double v181 = v52 * v180;
    double v182 = v179 + v181;
    double v183 = v175 + v182;
    double v184 = v183 * v76;
    double v185 = v18 * v30;
    double v186 = v44 * v180;
    double v187 = v185 + v186;
    double v188 = v103 * v187;
    double v189 = v184 + v188;
    double v190 = v84 + v143;
    double v191 = v190 * v44;
    double v192 = v62 + v146;
    double v193 = v52 * v192;
    double v194 = v191 + v193;
    double v195 = v194 * v127;
    double v196 = v44 * v192;
    double v197 = v59 + v196;
    double v198 = v137 * v197;
    double v199 = v195 + v198;
    double v200 = v189 + v199;
    double v201 = v74 / v9;
    double v202 = v88 * v201;
    double v203 = v94 * v97;
    double v204 = v74 / v96;
    double v205 = v100 * v204;
    double v206 = v203 - v205;
    double v207 = v206 * v65;
    double v208 = v202 + v207;
    double v209 = -v2;
    double v210 = v209 * v71;
    double v211 = v1 * v123;
    double v212 = v210 + v211;
    double v213 = v3 + v212;
    double v214 = -v213;
    double v215 = v214 / v9;
    double v216 = v116 * v215;
    double v217 = v91 * v209;
    double v218 = -v71;
    double v219 = v217 + v218;
    double v220 = v131 * v1;
    double v221 = v219 + v220;
    double v222 = -v221;
    double v223 = v222 * v97;
    double v224 = v214 / v96;
    double v225 = v100 * v224;
    double v226 = v223 - v225;
    double v227 = v226 * v122;
    double v228 = v216 + v227;
    double v229 = v208 + v228;
    double v230 = v79 * v18;
    double v231 = v21 * v60;
    double v232 = v230 + v231;
    double v233 = v34 * v36;
    double v234 = v27 * v29;
    double v235 = v233 + v234;
    double v236 = v235 * v44;
    double v237 = v36 * v29;
    double v238 = v52 * v237;
    double v239 = v236 + v238;
    double v240 = v232 + v239;
    double v241 = v240 * v201;
    double v242 = v18 * v60;
    double v243 = v44 * v237;
    double v244 = v242 + v243;
    double v245 = v206 * v244;
    double v246 = v241 + v245;
    double v247 = v165 * v215;
    double v248 = v226 * v169;
    double v249 = v247 + v248;
    double v250 = v246 + v249;
    double v251 = v27 * v18;
    double v252 = v21 * v36;
    double v253 = v251 + v252;
    double v254 = v35 * v60;
    double v255 = v79 * v30;
    double v256 = v254 + v255;
    double v257 = v256 * v44;
    double v258 = v60 * v30;
    double v259 = v52 * v258;
    double v260 = v257 + v259;
    double v261 = v253 + v260;
    double v262 = v261 * v201;
    double v263 = v18 * v36;
    double v264 = v44 * v258;
    double v265 = v263 + v264;
    double v266 = v206 * v265;
    double v267 = v262 + v266;
    double v268 = v194 * v215;
    double v269 = v226 * v197;
    double v270 = v268 + v269;
    double v271 = v267 + v270;
    double v272 = -v126;
    double v273 = v272 / v9;
    double v274 = v88 * v273;
    double v275 = -v133;
    double v276 = v275 * v97;
    double v277 = v272 / v96;
    double v278 = v100 * v277;
    double v279 = v276 - v278;
    double v280 = v279 * v65;
    double v281 = v274 + v280;
    double v282 = v213 / v9;
    double v283 = v56 * v282;
    double v284 = v221 * v97;
    double v285 = v213 / v96;
    double v286 = v100 * v285;
    double v287 = v284 - v286;
    double v288 = v287 * v70;
    double v289 = v283 + v288;
    double v290 = v281 + v289;
    double v291 = v240 * v273;
    double v292 = v279 * v244;
    double v293 = v291 + v292;
    double v294 = v149 * v282;
    double v295 = v287 * v152;
    double v296 = v294 + v295;
    double v297 = v293 + v296;
    double v298 = v261 * v273;
    double v299 = v279 * v265;
    double v300 = v298 + v299;
    double v301 = v183 * v282;
    double v302 = v287 * v187;
    double v303 = v301 + v302;
    double v304 = v300 + v303;
    ddR_2_0(0, 0) = v140;
    ddR_2_0(0, 1) = v172;
    ddR_2_0(0, 2) = v200;
    ddR_2_0(1, 0) = v229;
    ddR_2_0(1, 1) = v250;
    ddR_2_0(1, 2) = v271;
    ddR_2_0(2, 0) = v290;
    ddR_2_0(2, 1) = v297;
    ddR_2_0(2, 2) = v304;

    return ddR_2_0;
}

/**
 * @brief Compute \f$ \frac{d^2R}{d\theta_2 d\theta_1} \f$
 * 
 * @param[in] v \f$ \theta \f$
 * @return The partial second derivative.
 */
inline Eigen::Matrix3d ddR_2_1(const Eigen::Vector3d& v) {
    Eigen::Matrix3d ddR_2_1;
    double v0 = v[0];
    double v1 = v[1];
    double v2 = v[2];
    double v3 = v0 * v0;
    double v4 = v1 * v1;
    double v5 = v2 * v2;
    double v6 = v4 + v5;
    double v7 = v3 + v6;
    double v8 = sqrt(v7);
    double v9 = v8 * v8;
    double v10 = v8 / v9;
    double v11 = 0.500000;
    double v12 = v11 / v8;
    double v13 = v2 + v2;
    double v14 = v12 * v13;
    double v15 = v2 / v9;
    double v16 = v14 * v15;
    double v17 = v10 - v16;
    double v18 = sin(v8);
    double v19 = v17 * v18;
    double v20 = cos(v8);
    double v21 = v20 * v14;
    double v22 = v2 / v8;
    double v23 = v21 * v22;
    double v24 = v19 + v23;
    double v25 = v1 / v9;
    double v26 = v14 * v25;
    double v27 = -v26;
    double v28 = -v27;
    double v29 = v0 / v8;
    double v30 = -v29;
    double v31 = v28 * v30;
    double v32 = v0 / v9;
    double v33 = v14 * v32;
    double v34 = -v33;
    double v35 = -v34;
    double v36 = v1 / v8;
    double v37 = -v36;
    double v38 = v35 * v37;
    double v39 = v31 + v38;
    double v40 = 2.000000;
    double v41 = v11 * v8;
    double v42 = sin(v41);
    double v43 = v40 * v42;
    double v44 = v43 * v42;
    double v45 = v39 * v44;
    double v46 = cos(v41);
    double v47 = v11 * v14;
    double v48 = v46 * v47;
    double v49 = v48 * v43;
    double v50 = v48 * v40;
    double v51 = v50 * v42;
    double v52 = v49 + v51;
    double v53 = v30 * v37;
    double v54 = v52 * v53;
    double v55 = v45 + v54;
    double v56 = v24 + v55;
    double v57 = v1 * v2;
    double v58 = -v1;
    double v59 = -v22;
    double v60 = v18 * v59;
    double v61 = v36 * v29;
    double v62 = v44 * v61;
    double v63 = v60 + v62;
    double v64 = -v63;
    double v65 = v58 * v64;
    double v66 = 1.000000;
    double v67 = v22 * v59;
    double v68 = v30 * v29;
    double v69 = v67 + v68;
    double v70 = v44 * v69;
    double v71 = v66 + v70;
    double v72 = v66 - v71;
    double v73 = v0 * v72;
    double v74 = v65 + v73;
    double v75 = v57 + v74;
    double v76 = -v75;
    double v77 = v76 / v9;
    double v78 = v56 * v77;
    double v79 = -v17;
    double v80 = v79 * v18;
    double v81 = v21 * v59;
    double v82 = v80 + v81;
    double v83 = v34 * v36;
    double v84 = v27 * v29;
    double v85 = v83 + v84;
    double v86 = v85 * v44;
    double v87 = v52 * v61;
    double v88 = v86 + v87;
    double v89 = v82 + v88;
    double v90 = -v89;
    double v91 = v90 * v58;
    double v92 = v79 * v22;
    double v93 = v17 * v59;
    double v94 = v92 + v93;
    double v95 = v34 * v30;
    double v96 = v35 * v29;
    double v97 = v95 + v96;
    double v98 = v94 + v97;
    double v99 = v98 * v44;
    double v100 = v52 * v69;
    double v101 = v99 + v100;
    double v102 = -v101;
    double v103 = v102 * v0;
    double v104 = v91 + v103;
    double v105 = v1 + v104;
    double v106 = -v105;
    double v107 = v9 * v9;
    double v108 = v9 / v107;
    double v109 = v106 * v108;
    double v110 = v14 * v8;
    double v111 = v110 + v110;
    double v112 = v76 / v107;
    double v113 = v111 * v112;
    double v114 = v109 - v113;
    double v115 = v18 * v22;
    double v116 = v44 * v53;
    double v117 = v115 + v116;
    double v118 = v114 * v117;
    double v119 = v78 + v118;
    double v120 = v28 * v18;
    double v121 = v21 * v37;
    double v122 = v120 + v121;
    double v123 = v17 * v29;
    double v124 = v34 * v22;
    double v125 = v123 + v124;
    double v126 = v125 * v44;
    double v127 = v29 * v22;
    double v128 = v52 * v127;
    double v129 = v126 + v128;
    double v130 = v122 + v129;
    double v131 = v2 * v64;
    double v132 = -v0;
    double v133 = v18 * v29;
    double v134 = v37 * v59;
    double v135 = v44 * v134;
    double v136 = v133 + v135;
    double v137 = -v136;
    double v138 = v132 * v137;
    double v139 = v131 + v138;
    double v140 = v4 + v139;
    double v141 = v140 / v9;
    double v142 = v130 * v141;
    double v143 = v90 * v2;
    double v144 = v143 + v64;
    double v145 = v34 * v18;
    double v146 = v21 * v29;
    double v147 = v145 + v146;
    double v148 = v79 * v37;
    double v149 = v28 * v59;
    double v150 = v148 + v149;
    double v151 = v150 * v44;
    double v152 = v52 * v134;
    double v153 = v151 + v152;
    double v154 = v147 + v153;
    double v155 = -v154;
    double v156 = v155 * v132;
    double v157 = v144 + v156;
    double v158 = v157 * v108;
    double v159 = v140 / v107;
    double v160 = v111 * v159;
    double v161 = v158 - v160;
    double v162 = v18 * v37;
    double v163 = v44 * v127;
    double v164 = v162 + v163;
    double v165 = v161 * v164;
    double v166 = v142 + v165;
    double v167 = v119 + v166;
    double v168 = v101 * v77;
    double v169 = v114 * v71;
    double v170 = v168 + v169;
    double v171 = v154 * v141;
    double v172 = v161 * v136;
    double v173 = v171 + v172;
    double v174 = v170 + v173;
    double v175 = v35 * v18;
    double v176 = v21 * v30;
    double v177 = v175 + v176;
    double v178 = v27 * v22;
    double v179 = v17 * v36;
    double v180 = v178 + v179;
    double v181 = v180 * v44;
    double v182 = v22 * v36;
    double v183 = v52 * v182;
    double v184 = v181 + v183;
    double v185 = v177 + v184;
    double v186 = v185 * v77;
    double v187 = v18 * v30;
    double v188 = v44 * v182;
    double v189 = v187 + v188;
    double v190 = v114 * v189;
    double v191 = v186 + v190;
    double v192 = v27 * v37;
    double v193 = v28 * v36;
    double v194 = v192 + v193;
    double v195 = v194 + v97;
    double v196 = v195 * v44;
    double v197 = v37 * v36;
    double v198 = v197 + v68;
    double v199 = v52 * v198;
    double v200 = v196 + v199;
    double v201 = v200 * v141;
    double v202 = v44 * v198;
    double v203 = v66 + v202;
    double v204 = v161 * v203;
    double v205 = v201 + v204;
    double v206 = v191 + v205;
    double v207 = v94 + v194;
    double v208 = v207 * v44;
    double v209 = v67 + v197;
    double v210 = v52 * v209;
    double v211 = v208 + v210;
    double v212 = v75 / v9;
    double v213 = v211 * v212;
    double v214 = v105 * v108;
    double v215 = v75 / v107;
    double v216 = v111 * v215;
    double v217 = v214 - v216;
    double v218 = v44 * v209;
    double v219 = v66 + v218;
    double v220 = v217 * v219;
    double v221 = v213 + v220;
    double v222 = v1 * v0;
    double v223 = -v2;
    double v224 = v223 * v72;
    double v225 = v1 * v137;
    double v226 = v224 + v225;
    double v227 = v222 + v226;
    double v228 = -v227;
    double v229 = v228 / v9;
    double v230 = v130 * v229;
    double v231 = v102 * v223;
    double v232 = -v72;
    double v233 = v231 + v232;
    double v234 = v155 * v1;
    double v235 = v233 + v234;
    double v236 = -v235;
    double v237 = v236 * v108;
    double v238 = v228 / v107;
    double v239 = v111 * v238;
    double v240 = v237 - v239;
    double v241 = v240 * v164;
    double v242 = v230 + v241;
    double v243 = v221 + v242;
    double v244 = v89 * v212;
    double v245 = v217 * v63;
    double v246 = v244 + v245;
    double v247 = v154 * v229;
    double v248 = v240 * v136;
    double v249 = v247 + v248;
    double v250 = v246 + v249;
    double v251 = v27 * v18;
    double v252 = v21 * v36;
    double v253 = v251 + v252;
    double v254 = v35 * v59;
    double v255 = v79 * v30;
    double v256 = v254 + v255;
    double v257 = v256 * v44;
    double v258 = v59 * v30;
    double v259 = v52 * v258;
    double v260 = v257 + v259;
    double v261 = v253 + v260;
    double v262 = v261 * v212;
    double v263 = v18 * v36;
    double v264 = v44 * v258;
    double v265 = v263 + v264;
    double v266 = v217 * v265;
    double v267 = v262 + v266;
    double v268 = v200 * v229;
    double v269 = v240 * v203;
    double v270 = v268 + v269;
    double v271 = v267 + v270;
    double v272 = -v140;
    double v273 = v272 / v9;
    double v274 = v211 * v273;
    double v275 = -v157;
    double v276 = v275 * v108;
    double v277 = v272 / v107;
    double v278 = v111 * v277;
    double v279 = v276 - v278;
    double v280 = v279 * v219;
    double v281 = v274 + v280;
    double v282 = v227 / v9;
    double v283 = v56 * v282;
    double v284 = v235 * v108;
    double v285 = v227 / v107;
    double v286 = v111 * v285;
    double v287 = v284 - v286;
    double v288 = v287 * v117;
    double v289 = v283 + v288;
    double v290 = v281 + v289;
    double v291 = v89 * v273;
    double v292 = v279 * v63;
    double v293 = v291 + v292;
    double v294 = v101 * v282;
    double v295 = v287 * v71;
    double v296 = v294 + v295;
    double v297 = v293 + v296;
    double v298 = v261 * v273;
    double v299 = v279 * v265;
    double v300 = v298 + v299;
    double v301 = v185 * v282;
    double v302 = v287 * v189;
    double v303 = v301 + v302;
    double v304 = v300 + v303;
    ddR_2_1(0, 0) = v167;
    ddR_2_1(0, 1) = v174;
    ddR_2_1(0, 2) = v206;
    ddR_2_1(1, 0) = v243;
    ddR_2_1(1, 1) = v250;
    ddR_2_1(1, 2) = v271;
    ddR_2_1(2, 0) = v290;
    ddR_2_1(2, 1) = v297;
    ddR_2_1(2, 2) = v304;

    return ddR_2_1;
}

/**
 * @brief Compute \f$ \frac{d^2R}{d\theta_2 d\theta_2} \f$
 * 
 * @param[in] v \f$ \theta \f$
 * @return The partial second derivative.
 */
inline Eigen::Matrix3d ddR_2_2(const Eigen::Vector3d& v) {
    Eigen::Matrix3d ddR_2_2;
    double v0 = v[0];
    double v1 = v[1];
    double v2 = v[2];
    double v3 = v0 * v0;
    double v4 = v1 * v1;
    double v5 = v2 * v2;
    double v6 = v4 + v5;
    double v7 = v3 + v6;
    double v8 = sqrt(v7);
    double v9 = v8 * v8;
    double v10 = v8 / v9;
    double v11 = 0.500000;
    double v12 = v11 / v8;
    double v13 = v2 + v2;
    double v14 = v12 * v13;
    double v15 = v2 / v9;
    double v16 = v14 * v15;
    double v17 = v10 - v16;
    double v18 = sin(v8);
    double v19 = v17 * v18;
    double v20 = cos(v8);
    double v21 = v20 * v14;
    double v22 = v2 / v8;
    double v23 = v21 * v22;
    double v24 = v19 + v23;
    double v25 = v1 / v9;
    double v26 = v14 * v25;
    double v27 = -v26;
    double v28 = -v27;
    double v29 = v0 / v8;
    double v30 = -v29;
    double v31 = v28 * v30;
    double v32 = v0 / v9;
    double v33 = v14 * v32;
    double v34 = -v33;
    double v35 = -v34;
    double v36 = v1 / v8;
    double v37 = -v36;
    double v38 = v35 * v37;
    double v39 = v31 + v38;
    double v40 = 2.000000;
    double v41 = v11 * v8;
    double v42 = sin(v41);
    double v43 = v40 * v42;
    double v44 = v43 * v42;
    double v45 = v39 * v44;
    double v46 = cos(v41);
    double v47 = v11 * v14;
    double v48 = v46 * v47;
    double v49 = v48 * v43;
    double v50 = v48 * v40;
    double v51 = v50 * v42;
    double v52 = v49 + v51;
    double v53 = v30 * v37;
    double v54 = v52 * v53;
    double v55 = v45 + v54;
    double v56 = v24 + v55;
    double v57 = -v1;
    double v58 = v18 * v36;
    double v59 = -v22;
    double v60 = v59 * v30;
    double v61 = v44 * v60;
    double v62 = v58 + v61;
    double v63 = -v62;
    double v64 = v57 * v63;
    double v65 = v18 * v30;
    double v66 = v22 * v36;
    double v67 = v44 * v66;
    double v68 = v65 + v67;
    double v69 = -v68;
    double v70 = v0 * v69;
    double v71 = v64 + v70;
    double v72 = v5 + v71;
    double v73 = -v72;
    double v74 = v73 / v9;
    double v75 = v56 * v74;
    double v76 = v27 * v18;
    double v77 = v21 * v36;
    double v78 = v76 + v77;
    double v79 = v35 * v59;
    double v80 = -v17;
    double v81 = v80 * v30;
    double v82 = v79 + v81;
    double v83 = v82 * v44;
    double v84 = v52 * v60;
    double v85 = v83 + v84;
    double v86 = v78 + v85;
    double v87 = -v86;
    double v88 = v87 * v57;
    double v89 = v35 * v18;
    double v90 = v21 * v30;
    double v91 = v89 + v90;
    double v92 = v27 * v22;
    double v93 = v17 * v36;
    double v94 = v92 + v93;
    double v95 = v94 * v44;
    double v96 = v52 * v66;
    double v97 = v95 + v96;
    double v98 = v91 + v97;
    double v99 = -v98;
    double v100 = v99 * v0;
    double v101 = v88 + v100;
    double v102 = v13 + v101;
    double v103 = -v102;
    double v104 = v9 * v9;
    double v105 = v9 / v104;
    double v106 = v103 * v105;
    double v107 = v14 * v8;
    double v108 = v107 + v107;
    double v109 = v73 / v104;
    double v110 = v108 * v109;
    double v111 = v106 - v110;
    double v112 = v18 * v22;
    double v113 = v44 * v53;
    double v114 = v112 + v113;
    double v115 = v111 * v114;
    double v116 = v75 + v115;
    double v117 = v28 * v18;
    double v118 = v21 * v37;
    double v119 = v117 + v118;
    double v120 = v17 * v29;
    double v121 = v34 * v22;
    double v122 = v120 + v121;
    double v123 = v122 * v44;
    double v124 = v29 * v22;
    double v125 = v52 * v124;
    double v126 = v123 + v125;
    double v127 = v119 + v126;
    double v128 = v2 * v1;
    double v129 = v2 * v63;
    double v130 = -v0;
    double v131 = 1.000000;
    double v132 = v37 * v36;
    double v133 = v29 * v30;
    double v134 = v132 + v133;
    double v135 = v44 * v134;
    double v136 = v131 + v135;
    double v137 = v131 - v136;
    double v138 = v130 * v137;
    double v139 = v129 + v138;
    double v140 = v128 + v139;
    double v141 = v140 / v9;
    double v142 = v127 * v141;
    double v143 = v87 * v2;
    double v144 = v143 + v63;
    double v145 = v27 * v37;
    double v146 = v28 * v36;
    double v147 = v145 + v146;
    double v148 = v35 * v29;
    double v149 = v34 * v30;
    double v150 = v148 + v149;
    double v151 = v147 + v150;
    double v152 = v151 * v44;
    double v153 = v52 * v134;
    double v154 = v152 + v153;
    double v155 = -v154;
    double v156 = v155 * v130;
    double v157 = v144 + v156;
    double v158 = v1 + v157;
    double v159 = v158 * v105;
    double v160 = v140 / v104;
    double v161 = v108 * v160;
    double v162 = v159 - v161;
    double v163 = v18 * v37;
    double v164 = v44 * v124;
    double v165 = v163 + v164;
    double v166 = v162 * v165;
    double v167 = v142 + v166;
    double v168 = v116 + v167;
    double v169 = v80 * v22;
    double v170 = v17 * v59;
    double v171 = v169 + v170;
    double v172 = v171 + v150;
    double v173 = v172 * v44;
    double v174 = v22 * v59;
    double v175 = v174 + v133;
    double v176 = v52 * v175;
    double v177 = v173 + v176;
    double v178 = v177 * v74;
    double v179 = v44 * v175;
    double v180 = v131 + v179;
    double v181 = v111 * v180;
    double v182 = v178 + v181;
    double v183 = v34 * v18;
    double v184 = v21 * v29;
    double v185 = v183 + v184;
    double v186 = v80 * v37;
    double v187 = v28 * v59;
    double v188 = v186 + v187;
    double v189 = v188 * v44;
    double v190 = v37 * v59;
    double v191 = v52 * v190;
    double v192 = v189 + v191;
    double v193 = v185 + v192;
    double v194 = v193 * v141;
    double v195 = v18 * v29;
    double v196 = v44 * v190;
    double v197 = v195 + v196;
    double v198 = v162 * v197;
    double v199 = v194 + v198;
    double v200 = v182 + v199;
    double v201 = v98 * v74;
    double v202 = v111 * v68;
    double v203 = v201 + v202;
    double v204 = v154 * v141;
    double v205 = v162 * v136;
    double v206 = v204 + v205;
    double v207 = v203 + v206;
    double v208 = v171 + v147;
    double v209 = v208 * v44;
    double v210 = v174 + v132;
    double v211 = v52 * v210;
    double v212 = v209 + v211;
    double v213 = v72 / v9;
    double v214 = v212 * v213;
    double v215 = v102 * v105;
    double v216 = v72 / v104;
    double v217 = v108 * v216;
    double v218 = v215 - v217;
    double v219 = v44 * v210;
    double v220 = v131 + v219;
    double v221 = v218 * v220;
    double v222 = v214 + v221;
    double v223 = v2 * v0;
    double v224 = -v2;
    double v225 = v224 * v69;
    double v226 = v1 * v137;
    double v227 = v225 + v226;
    double v228 = v223 + v227;
    double v229 = -v228;
    double v230 = v229 / v9;
    double v231 = v127 * v230;
    double v232 = v99 * v224;
    double v233 = -v69;
    double v234 = v232 + v233;
    double v235 = v155 * v1;
    double v236 = v234 + v235;
    double v237 = v0 + v236;
    double v238 = -v237;
    double v239 = v238 * v105;
    double v240 = v229 / v104;
    double v241 = v108 * v240;
    double v242 = v239 - v241;
    double v243 = v242 * v165;
    double v244 = v231 + v243;
    double v245 = v222 + v244;
    double v246 = v80 * v18;
    double v247 = v21 * v59;
    double v248 = v246 + v247;
    double v249 = v34 * v36;
    double v250 = v27 * v29;
    double v251 = v249 + v250;
    double v252 = v251 * v44;
    double v253 = v36 * v29;
    double v254 = v52 * v253;
    double v255 = v252 + v254;
    double v256 = v248 + v255;
    double v257 = v256 * v213;
    double v258 = v18 * v59;
    double v259 = v44 * v253;
    double v260 = v258 + v259;
    double v261 = v218 * v260;
    double v262 = v257 + v261;
    double v263 = v193 * v230;
    double v264 = v242 * v197;
    double v265 = v263 + v264;
    double v266 = v262 + v265;
    double v267 = v86 * v213;
    double v268 = v218 * v62;
    double v269 = v267 + v268;
    double v270 = v154 * v230;
    double v271 = v242 * v136;
    double v272 = v270 + v271;
    double v273 = v269 + v272;
    double v274 = -v140;
    double v275 = v274 / v9;
    double v276 = v212 * v275;
    double v277 = -v158;
    double v278 = v277 * v105;
    double v279 = v274 / v104;
    double v280 = v108 * v279;
    double v281 = v278 - v280;
    double v282 = v281 * v220;
    double v283 = v276 + v282;
    double v284 = v228 / v9;
    double v285 = v56 * v284;
    double v286 = v237 * v105;
    double v287 = v228 / v104;
    double v288 = v108 * v287;
    double v289 = v286 - v288;
    double v290 = v289 * v114;
    double v291 = v285 + v290;
    double v292 = v283 + v291;
    double v293 = v256 * v275;
    double v294 = v281 * v260;
    double v295 = v293 + v294;
    double v296 = v177 * v284;
    double v297 = v289 * v180;
    double v298 = v296 + v297;
    double v299 = v295 + v298;
    double v300 = v86 * v275;
    double v301 = v281 * v62;
    double v302 = v300 + v301;
    double v303 = v98 * v284;
    double v304 = v289 * v68;
    double v305 = v303 + v304;
    double v306 = v302 + v305;
    ddR_2_2(0, 0) = v168;
    ddR_2_2(0, 1) = v200;
    ddR_2_2(0, 2) = v207;
    ddR_2_2(1, 0) = v245;
    ddR_2_2(1, 1) = v266;
    ddR_2_2(1, 2) = v273;
    ddR_2_2(2, 0) = v292;
    ddR_2_2(2, 1) = v299;
    ddR_2_2(2, 2) = v306;

    return ddR_2_2;
}

/** @} */ // end of group

}  // namespace DCA